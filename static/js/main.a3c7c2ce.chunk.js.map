{"version":3,"sources":["components/cart.jsx","components/product.jsx","components/productsGrid.jsx","components/filterGrid.jsx","components/cartGrid.jsx","App.js","serviceWorker.js","index.js"],"names":["Cart","react_default","a","createElement","className","this","props","cart","Component","Product","_this$props","product","onAddToCart","isAddedToCart","name","price","type","disabled","value","onClick","id","ProductsGrid","products","prod3","p","count","keyIndexTr","forEach","element","index","push","components_product","key","length","PureComponent","FilterGrid","buildFilterValues","filterValArr","map","defaultValue","onChange","onSizeBy","sizeValues","onSortBy","sortValues","CartGrid","state","maxVal","qtyArr","buildQuantityValues","_this$state","_this","i","calTotalPrice","cartProducts","reduce","sum","parseFloat","subTotal","slice","formattedTotalPrice","_this2","onDelete","onQtyChange","totalPrice","toFixed","prod","e","App","PRODUCTS","category","sizeBy","SIZE_VALUES","sortBy","SORT_VALUES","sizeFilteringProductsArr","productsFiltered","filter","size","sortProductsArr","sizeByFilter","target","productsSorted","concat","sort","b","featured","setState","componentWillMount","console","log","componentWillUpdate","componentDidUpdate","sortByFilter","parseInt","addProductToCart","productId","Object","toConsumableArray","findProduct","qty","updatePrices","deleteProductFromCart","updateCartNumber","findIndex","updateCartDetails","isUpdate","calSubTotalPrice","total","unformatPrice","components_cart","filterGrid","productsGrid","cartGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3c7c2ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Cart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cart\">\r\n        Cart{\" \"}\r\n        <sup>\r\n          <strong>{this.props.cart}</strong>\r\n        </sup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Product extends Component {\r\n  render() {\r\n    const { product, onAddToCart } = this.props;\r\n    const isAddedToCart = product.isAddedToCart;\r\n    return (\r\n      <td className=\"tdProduct\">\r\n        <div>\r\n          {/* {product.id}.&nbsp; */}\r\n          {product.name}\r\n        </div>\r\n        <div className=\"price\">\r\n          <strong>{product.price}</strong>\r\n        </div>\r\n\r\n        <input\r\n          type=\"button\"\r\n          className={\"addBtn \" + (isAddedToCart ? \"btnDisabled\" : \"btnEnabled\")}\r\n          name=\"add\"\r\n          disabled={isAddedToCart ? true : false}\r\n          value={isAddedToCart ? \"Added to Cart\" : \"Add to Cart\"}\r\n          onClick={() => onAddToCart(product.id)}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nimport Product from \"./product\";\r\n\r\nclass ProductsGrid extends PureComponent {\r\n  render() {\r\n    const { products, onAddToCart } = this.props;\r\n    let prod3 = [];\r\n    let p = [];\r\n    let count = 0,\r\n      keyIndexTr = 0;\r\n\r\n    products.forEach((element, index) => {\r\n      p.push(\r\n        <Product key={index} product={element} onAddToCart={onAddToCart} />\r\n      );\r\n      count++;\r\n      if (count === 3 || index === products.length - 1) {\r\n        prod3.push(<tr key={keyIndexTr++}>{p}</tr>);\r\n        p = [];\r\n        count = 0;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"productGrid\">\r\n        <table className=\"productTbl\">\r\n          <tbody>{prod3}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsGrid;\r\n","import React, { Component, PureComponent } from \"react\";\r\n\r\nclass FilterGrid extends PureComponent {\r\n  buildFilterValues = filterValArr => {\r\n    const filterVal1 = filterValArr.map((element, index) => {\r\n      return (\r\n        <option key={index} value={index}>\r\n          {element}\r\n        </option>\r\n      );\r\n    });\r\n    return filterVal1;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"filterGrid\">\r\n        <div>\r\n          <span>Size by: </span>\r\n          <select id=\"size\" defaultValue=\"All\" onChange={this.props.onSizeBy}>\r\n            {this.buildFilterValues(this.props.sizeValues)}\r\n          </select>\r\n          &nbsp;&nbsp;\r\n          <span>Sort by: </span>\r\n          <select\r\n            id=\"sortBy\"\r\n            defaultValue=\"Featured\"\r\n            onChange={this.props.onSortBy}\r\n          >\r\n            {this.buildFilterValues(this.props.sortValues)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterGrid;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CartGrid extends Component {\r\n  state = {\r\n    maxVal: 10,\r\n    qtyArr: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.buildQuantityValues();\r\n  }\r\n\r\n  buildQuantityValues = () => {\r\n    let { maxVal, qtyArr } = this.state;\r\n    for (let i = 1; i <= maxVal; i++) {\r\n      qtyArr.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return qtyArr;\r\n  };\r\n\r\n  calTotalPrice = cartProducts => {\r\n    if (cartProducts.length > 0) {\r\n      return cartProducts.reduce(\r\n        (sum, a) => sum + parseFloat(a.subTotal.slice(1)),\r\n        0\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { cartProducts, onDelete, onQtyChange } = this.props;\r\n    let totalPrice = this.calTotalPrice(cartProducts);\r\n    if (cartProducts.length == 0 ) { }\r\n    let formattedTotalPrice;\r\n    if (totalPrice > 0) {\r\n      formattedTotalPrice = \"$\" + totalPrice.toFixed(2);\r\n      formattedTotalPrice = (\r\n        <div className=\"totalPrice\">{formattedTotalPrice}</div>\r\n      );\r\n    } else {\r\n      formattedTotalPrice = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className={\"cartGrid \" + ( cartProducts.length == 0 ? \"borderNone\" : \"border\")  }>\r\n        <ol>\r\n          {cartProducts.map(prod => (\r\n            <li key={prod.id}>\r\n              <div className=\"prodDetails\">\r\n                <span className=\"prodName\">{prod.name}</span>\r\n                <div className=\"qtyDetails\">\r\n                <span className=\"qty\">Qty: </span>\r\n                <select\r\n                  id=\"qty\"\r\n                  name=\"quantity\"\r\n                  onChange={e => onQtyChange(prod.id, e)}\r\n                >\r\n                  {this.state.qtyArr}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"prodPrice\">{prod.subTotal}</div>\r\n              <button onClick={() => onDelete(prod.id)}>x</button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        {formattedTotalPrice}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartGrid;\r\n","import React, { Component } from \"react\";\nimport \"./common.css\";\nimport Cart from \"./components/cart\";\nimport ProductsGrid from \"./components/productsGrid\";\nimport FilterGrid from \"./components/filterGrid\";\nimport CartGrid from \"./components/cartGrid\";\n\nclass App extends Component {\n  state = {\n    products: PRODUCTS,\n    category: \"Women\",\n    sizeBy: \"All\",\n    sizeValues: SIZE_VALUES,\n    sortBy: 0, // featured\n    sortValues: SORT_VALUES,\n    cart: 0,\n    cartProducts: []\n  };\n\n  sizeFilteringProductsArr = sizeBy => {\n    let { sortBy } = this.state;\n    let productsFiltered = [];\n    if (sizeBy === \"All\") {\n      productsFiltered = PRODUCTS;\n    } else {\n      productsFiltered = PRODUCTS.filter(a => {\n        return a.size === sizeBy;\n      });\n    }\n    this.sortProductsArr(sortBy, productsFiltered, sizeBy);\n  };\n\n  sizeByFilter = e => {\n    this.sizeFilteringProductsArr(this.state.sizeValues[e.target.value]);\n  };\n\n  sortProductsArr = (sortBy, products, sizeBy) => {\n    if (products == null) {\n      // sort only\n      products = this.state.products;\n    }\n    let productsSorted = [].concat(products).sort((a, b) => {\n      switch (sortBy) {\n        case 0: //featured\n          return b.featured - a.featured;\n        case 1: //price low-to-high\n          return parseFloat(a.price.slice(1)) - parseFloat(b.price.slice(1));\n        case 2: //price high-to-low\n          return parseFloat(b.price.slice(1)) - parseFloat(a.price.slice(1));\n        case \"default\":\n          return a.id - b.id;\n      }\n    });\n    this.setState({ products: productsSorted, sortBy, sizeBy });\n  };\n\n  componentWillMount = function() {\n    console.log(\"mounting..\");\n    this.sortProductsArr(this.state.sortBy); // initially sort by \"featured\"\n  };\n  componentWillUpdate = function() {\n    console.log(\"updating..\");\n  };\n\n  componentDidUpdate = function() {\n    console.log(\"did update\");\n  };\n\n  sortByFilter = e => {\n    this.sortProductsArr(parseInt(e.target.value), this.state.products);\n  };\n\n  addProductToCart = productId => {\n    let products = [...this.state.products];\n    const product = this.findProduct(products, productId);\n    product.qty = 1;\n    product.isAddedToCart = true;\n    this.setState({ products });\n    this.setState(this.updatePrices(false, product, this.state.cartProducts));\n  };\n\n  deleteProductFromCart = productId => {\n    let products = [...this.state.products];\n    const product = this.findProduct(products, productId);\n    product.isAddedToCart = false;\n    const cartProducts = this.state.cartProducts.filter(p => p.id != productId);\n    let cart = this.updateCartNumber(cartProducts);\n    this.setState({ products });\n    this.setState({ cart, cartProducts });\n  };\n\n  findProduct = (products, productId) => {\n    const index = products.findIndex(p => p.id == productId);\n    return products[index];\n  };\n\n  updateCartDetails = (productId, e) => {\n    let cartProducts = [...this.state.cartProducts];\n    const product = this.findProduct(cartProducts, productId);\n    product.qty = parseInt(e.target.value);\n    this.setState(this.updatePrices(true, product, cartProducts));\n  };\n\n  updatePrices = (isUpdate, prod, cartProducts) => {\n    prod.subTotal = this.calSubTotalPrice(prod.price, prod.qty);\n    if (!isUpdate) {\n      cartProducts.push(prod);\n    }\n    let cart = this.updateCartNumber(cartProducts);\n    return { cart: cart, cartProducts: cartProducts };\n  };\n\n  updateCartNumber = cartProducts => {\n    return cartProducts.reduce(\n      (total, element) => total + parseInt(element.qty),\n      0\n    );\n  };\n\n  calSubTotalPrice = (price, qty) => {\n    price = qty * this.unformatPrice(price);\n    return \"$\" + price.toFixed(2);\n  };\n\n  unformatPrice = price => {\n    return parseFloat(price.slice(1));\n  };\n\n  render() {\n    return (\n      <div className=\"page\">\n        <h2 className=\"pageHeader\">Shopping Cart</h2>\n        <div>\n          <Cart cart={this.state.cart} />\n          <FilterGrid\n            onSizeBy={this.sizeByFilter}\n            sizeValues={this.state.sizeValues}\n            onSortBy={this.sortByFilter}\n            sortValues={this.state.sortValues}\n          />\n        </div>\n        <div className=\"productAndCartGrid\">\n          <ProductsGrid\n            products={this.state.products}\n            onAddToCart={this.addProductToCart}\n          />\n          <CartGrid\n            cartProducts={this.state.cartProducts}\n            onDelete={this.deleteProductFromCart}\n            onQtyChange={this.updateCartDetails}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst SIZE_VALUES = [\n  \"All\",\n  \"Women\",\n  \"Juniors\",\n  \"Plus\",\n  \"Juniors Plus\",\n  \"Maternity\"\n];\nconst SORT_VALUES = [\"Featured\", \"Price-low to high\", \"Price-high to low\"];\nconst PRODUCTS = [\n  {\n    id: 1,\n    name: \"Women's Long Sleeve Cardigan\",\n    category: \"Women\",\n    size: \"Women\",\n    price: \"$15.99\",\n    featured: 48\n  },\n  {\n    id: 2,\n    name: \"Women's Short Sleeve (Juniors)\",\n    category: \"Women\",\n    size: \"Juniors\",\n    price: \"$7.99\",\n    featured: 4\n  },\n  {\n    id: 3,\n    name: \"Women's Plus Size Cardigan\",\n    category: \"Women\",\n    size: \"Plus\",\n    price: \"$12.99\",\n    featured: 8\n  },\n  {\n    id: 4,\n    name: \"Women's Crew Neck Sweater (Juniors Plus)\",\n    category: \"Women\",\n    size: \"Juniors Plus\",\n    price: \"$9.49\",\n    featured: 20\n  },\n  {\n    id: 5,\n    name: \"Women's Long Sleeve\",\n    category: \"Women\",\n    size: \"Women\",\n    price: \"$8.99\",\n    featured: 37\n  },\n  {\n    id: 6,\n    name: \"Maternity Cozy Wrap Cardigan\",\n    category: \"Women\",\n    size: \"Maternity\",\n    price: \"$10.99\",\n    featured: 2\n  },\n  {\n    id: 7,\n    name: \"Maternity Striped Pullover\",\n    category: \"Women\",\n    size: \"Maternity\",\n    price: \"$11.99\",\n    featured: 12\n  },\n  {\n    id: 8,\n    name: \"Women's Plus Size Pullover\",\n    category: \"Women\",\n    size: \"Plus\",\n    price: \"$10.49\",\n    featured: 39\n  },\n  {\n    id: 9,\n    name: \"Women's Long Sleeve Hoodie\",\n    category: \"Women\",\n    size: \"Women\",\n    price: \"$14.99\",\n    featured: 18\n  }\n];\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}